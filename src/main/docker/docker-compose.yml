services:
  redis-simalsi:
    container_name: redis-client-simalsi
    image: docker.io/redis:7
    ports:
      - 6379:6379
    networks:
      - simalsi_network

  # Keycloak
  postgres-keycloak-simalsi:
    container_name: postgres-keycloak-simalsi
    image: docker.io/library/postgres:14
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    networks:
      - keycloak_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak -d keycloak" ]
      interval: 5s
      retries: 100

  keycloak-simalsi:
    container_name: keycloak-simalsi
    image: quay.io/keycloak/keycloak:25.0.6
    volumes:
      - "../resources/keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json"
      - "../resources/keycloak/kcthemes/themes:/opt/keycloak/themes"
    command:
      - start-dev
      - --import-realm
    environment:
      KEYCLOAK_ADMIN: adm1nsimalsi
      KEYCLOAK_ADMIN_PASSWORD: nircut-Bodge0-kacpam
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak-simalsi/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HEALTH_ENABLED: "true"
      KC_PROXY: edge
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME: https://app.simalsi.com
    ports:
      - 7777:8080
    restart: always
    depends_on:
      postgres-keycloak-simalsi:
        condition: service_healthy
    networks:
      - keycloak_network
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;" ]
      interval: 5s
      timeout: 10s
      retries: 100

  postgres-simalsi:
    image: docker.io/library/postgres:14
    container_name: postgres-simalsi
    networks:
      - simalsi_network
    environment:
      POSTGRES_DB: simalsi
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d simalsi" ]
      interval: 5s
      retries: 100

  simalsi-service:
    image: quarkus/simalsi-jvm
    container_name: simalsi-service
    restart: always
    networks:
      - simalsi_network
      - keycloak_network
    ports:
      - "8080:8080"
    environment:
      CLIENT_QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak-simalsi:8080/realms/SIMALSI
      KEYCLOAK_REALMS: SIMALSI
      KEYCLOAK_URL: http://keycloak-simalsi:8080
      QUARKUS_OIDC_APPLICATION_TYPE: service
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak-simalsi:8080/realms/SIMALSI
      QUARKUS_OIDC_CLIENT_ID: quarkus-app
      QUARKUS_OIDC_CREDENTIALS_SECRET: mi-clave-secreta
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-simalsi:5432/simalsi
      QUARKUS_KEYCLOAK_ADMIN_CLIENT_SERVER_URL: http://keycloak-simalsi:8080
      QUARKUS_KEYCLOAK_ADMIN_CLIENT_USERNAME: adm1nsimalsi
      QUARKUS_KEYCLOAK_ADMIN_CLIENT_PASSWORD: nircut-Bodge0-kacpam
      QUARKUS_HIBERNATE_ORM_SCHEMA_MANAGEMENT_STRATEGY: drop-and-create
      QUARKUS_HIBERNATE_ORM_SQL_LOAD_SCRIPT: asdfasdf
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: drop-and-create
      AWS_ACCESS_KEY_ID: 123
      AWS_SECRET_ACCESS_KEY: 123
    depends_on:
      postgres-simalsi:
        condition: service_healthy
      keycloak-simalsi:
        condition: service_healthy

networks:
  keycloak_network:
    driver: bridge
  simalsi_network:
    driver: bridge
